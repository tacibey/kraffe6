---
// Import AvatarTestimonialSection component
import AvatarTestimonialSection from "../../ui/avatars/AvatarTestimonialSection.astro";
// Image importuna artık burada gerek yok, content string olarak HTML içerecek

// Define props from Astro
const { title, testimonials } = Astro.props;

// Define TypeScript interface for Testimonial
interface Testimonial {
  content: string; // Artık bu string HTML içerecek
  author: string;
  role: string;
  avatarSrc: string;
  avatarAlt: string;
}

// Define TypeScript interface for props
interface Props {
  title: string;
  testimonials: Testimonial[];
}
---
<!-- Main div that wraps the testimonials section -->
<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
  id="testimonials"
>
  {/* Title of the testimonials section */}
  <div class="mb-6 w-3/4 max-w-2xl sm:mb-10 md:mb-16 lg:w-1/2">
    <h2
      class="text-balance text-2xl font-bold text-neutral-800 dark:text-neutral-200 sm:text-3xl lg:text-4xl"
    >
      {title}
    </h2>
  </div>

  <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
    {/* Looping through each testimonial data and rendering it */}
    {
      testimonials.map((testimonial) => (
        <div class="flex h-auto">
          <div class="flex flex-col rounded-xl bg-neutral-50 p-4 shadow-sm dark:bg-neutral-800 dark:border-neutral-700 md:p-6"> {/* Arka plan ve padding güncellendi */}
            {/* === Testimonial content - set:html kullanıldı === */}
            <div class="flex-auto prose prose-sm dark:prose-invert max-w-none"> {/* Prose sınıfları eklendi */}
              <Fragment set:html={testimonial.content} />
            </div>
            {/* === /Testimonial content === */}

            {/* Yazar ve Avatar Bilgisi */}
            {(testimonial.author || testimonial.avatarSrc) && (
              <div class="mt-4 rounded-b-xl bg-neutral-100 p-3 dark:bg-neutral-700/60 md:px-5"> {/* Arka plan ve padding güncellendi */}
                <div class="flex items-center">
                  {testimonial.avatarSrc && (
                    <AvatarTestimonialSection
                      src={testimonial.avatarSrc}
                      alt={testimonial.avatarAlt}
                    />
                  )}
                  {(testimonial.author || testimonial.role) && (
                    <div class={`grow ${testimonial.avatarSrc ? 'ms-3' : ''}`}>
                      {testimonial.author && (
                        <p class="text-sm font-semibold text-neutral-800 dark:text-neutral-200 sm:text-base"> {/* font-semibold eklendi */}
                          {testimonial.author}
                        </p>
                      )}
                      {testimonial.role && (
                        <p class="text-xs text-neutral-600 dark:text-neutral-400">
                          {testimonial.role}
                        </p>
                      )}
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>
        </div>
      ))
    }
  </div>
</section>
