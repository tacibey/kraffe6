---
// src/components/ui/banners/AnnouncementBanner.astro

// Gelen prop'ları alıyoruz (title artık kullanılmayacak)
const { btnId, btnTitle, url } = Astro.props;

interface Props {
  // title artık gerekli değil
  btnId: string; // Bu ID artık kullanılmıyor ama prop olarak kalabilir
  btnTitle: string;
  url: string;
}
---

<astro-banner btnId={btnId}>
  <!-- Sabit konumlandırma ve stil için container -->
  <div class="fixed bottom-4 right-4 z-50">
    <!-- Buton olarak işlev gören link -->
    <a
      class="group inline-flex items-center gap-x-2 rounded-full bg-orange-400 px-4 py-2 text-sm font-semibold text-neutral-50 shadow-md transition duration-300 hover:bg-orange-500 focus:outline-none focus-visible:ring-2 focus-visible:ring-orange-500 focus-visible:ring-offset-2 dark:focus-visible:ring-offset-neutral-800"
      href={url}
    >
      {btnTitle}
      <!-- Ok ikonu kaldırıldı -->
    </a>
    <!-- Kapatma butonu kaldırıldı -->
  </div>
</astro-banner>

<!-- Kapatma butonuyla ilgili script kaldırıldı -->
<script>
  // Bu script artık gerekli değil çünkü kapatma butonu yok.
  // İstersen tamamen silebilirsin veya yorumda bırakabilirsin.
  // class AstroBanner extends HTMLElement {
  //   connectedCallback() {
  //     const btnId = this.getAttribute("btnId");
  //     const button = this.querySelector(`#${btnId}`);
  //     if (button != null) {
  //       button.addEventListener("click", () => this.remove());
  //     }
  //   }
  // }
  // customElements.define("astro-banner", AstroBanner);
</script>
